# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-test-and-scan:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:3.1-focal
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          working_directory: ~/project/PostgresQueryCreator/
          name: Build Project
          command: |
            dotnet build PostgresQueryCreator.csproj
      - run:
          working_directory: ~/project/PostgresQueryCreator.Tests/
          name: Run tests
          command: |
            dotnet test PostgresQueryCreator.Tests.csproj --logger trx /p:CollectCoverage=true
      - run:
          name: Update Apt
          command: 
            apt update -y
      - run:
          name: Install Deps
          command: 
            apt install zip -y
            && rm -rf /var/lib/apt/lists/*      
      - sonarcloud/scan

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sonar-cloud-scan:
    jobs:
      - build-test-and-scan:
          context: SonarCloud

